actionhero - a node.js API framework for both tcp sockets, web sockets, and http clients.

Binary options:
* help (default)
* start
* startCluster
* generate
* generateAction
* generateTask
* generateInitializer
* generateServer
* actions
* enqueueTask
* console

Descriptions:

* actionhero help
  will display this document

* actionhero start --config=[/path/to/config.js] --title=[processTitle]  --daemon
  will start a template actionhero server
  this is the respondent to "npm start"
  [config] (optional) path to config.js, defaults to "process.cwd() + '/' + config.js". You can also use ENV[ACTIONHERO_CONFIG].
  [title] (optional) process title to use for actionhero-s ID, ps, log, and pidFile defaults. Must be unique for each member of the cluster.  You can also use ENV[ACTIONHERO_TITLE]. Process renaming does not work on OSX/Windows
  [daemon] (optional) to fork and run as a new background process defaults to false

* actionhero startCluster --exec=[command] --workers=[numWorkers] --pidfile=[path] --log=[path] --title=[clusterTitle] --workerTitlePrefix=[prefix] --config=[/path/to/config.js]  --daemon
  will launch a actionhero cluster (using node-s cluster module)
  [exec] (optional) command for the cluster-master to run to stat the workers
  [workers] (optional) number of workers (defaults to # CPUs - 2)
  [pidfile] (optional) pidfile location (defaults to process.cwd() + '/pids')
  [log] (optional) logfile (defaults to process.cwd() + /log/cluster.log)
  [title] (optional) default actionhero-master  Does not work on OSX/Windows
  [workerTitlePrefix] (optional) default actionhero-worker
  [config] (optional) path to config.js for workers, defaults to "process.cwd() + '/' + config.js". You can also use ENV[ACTIONHERO_CONFIG]
  [daemon] (optional) to fork and run as a new background process defaults to false

* actionhero generate
  will prepare an empty directory with a template actionhero project

* actionhero generateAction --name=[name] --description=[description] --inputsRequired=[inputsRequired] --inputsOptional=[inputsOptional]
  will generate a new action in "actions"
  [name] (required)
  [description] (required) should be wrapped in quotes if it contains spaces

* actionhero generateTask --name=[name] --description=[description] --scope=[scope] --frequency=[frequency]
  will generate a new task in "tasks"
  [name] (required)
  [description] (required) should be wrapped in quotes if it contains spaces
  [scope] (optional) can be "any" or "all"
  [frequency] (optional)

* actionhero generateInitializer --name=[name]
  will generate a new initializer in "initializers"
  [name] (required)

* actionhero generateServer --name=[name]
  will generate a new server in "servers"
  [name] (required)

* actionhero actions
  will list all actions in this server to stdout

* actionhero enqueueTask --name=[taskName] --args=[JSON-formatted args]
  will enqueue a task into redis

* actionhero console
  will open an interactive CLI with the API object in scope.
  this is sometimes called a REPL

More Help & the actionhero documentation can be found @ http://www.actionherojs.com
