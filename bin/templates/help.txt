ActionHero - A multi-transport node.js API Server with integrated cluster
  capabilities and delayed tasks

Binary options:
* help (default)
* start
* start cluster
* generate
* generate action
* generate task
* generate initializer
* generate server
* actions list
* tasks enqueue
* console
* link
* unlink

Descriptions:

* actionhero help
  will display this document

* actionhero start --config=[/path/to/config] --title=[processTitle]
    --daemon
  [config] (optional) path to config.js, defaults to "process.cwd() + '/'
    + config.js". You can also use ENV[ACTIONHERO_CONFIG].
  [title] (optional) process title to use for ActionHero's ID, ps, log, and
    pidFile defaults. Must be unique for each member of the cluster.
    You can also use ENV[ACTIONHERO_TITLE].
    Process renaming does not work on OSX/Windows
  [daemon] (optional) to fork and run as a new background process defaults
    to false

* actionhero start cluster --workers=[numWorkers]  --daemon
  will launch a ActionHero cluster (using node-s cluster module)
  [workers] (optional) number of workers (defaults to # CPUs - 2)
  [daemon] (optional) to fork and run as a new background process defaults
    to false

* actionhero generate
  will prepare an empty directory with a template ActionHero project

* actionhero generate action --name=[name] --description=[description]
  will generate a new action in "actions"
  [name] (required)
  [description] (optional)

* actionhero generate task --name=[name] --description=[description]
    --scope=[scope] --frequency=[frequency]
  will generate a new task in "tasks"
  [name] (required)
  [description] (optional)
  [queue] (required)
  [frequency] (optional)

* actionhero generate initializer --name=[name] --loadPriority=[p]
    --startPriority=[p] --stopPriority=[p]
  will generate a new initializer in "initializers"
  [name] (required)
  [loadPriority] (optional)
  [startPriority] (optional)
  [stopPriority] (optional)

* actionhero generate server --name=[name]
  will generate a new server in "servers"
  [name] (required)

* actionhero actions list
  will list all actions in this server to stdout

* actionhero task enqueue --name=[taskName] --args=[JSON-formatted args]
  will enqueue a task into redis

* actionhero console
  will open an interactive CLI with the API object in scope.
  this is sometimes called a REPL

* actionhero link --name=[pluginName] --overwriteConfig=[overwriteConfig]
  will link the actions, tasks, initializers, etc from a plugin into your
    top-level project normally, you will have first installed the plugin
    via `npm install myPlugin`
  [name] (required)
  [overwriteConfig] (optional) default: false

* actionhero unlink --name=[pluginName]
  will remove the linked actions, tasks, initializers, etc from a plugin in your
    top-level project. Please remove the config files manually
  Remember if your plugin was installed via NPM, also be sure to remove it from your
    package.json or uninstall it with npm uninstall --save
  [name] (required)

#############################################################
## More Help & the ActionHero documentation can be found @ ##
##             http://www.actionherojs.com                 ##
#############################################################
