name: Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm ci
      - name: save cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-cache-${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: node
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: download cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-cache-${{ github.sha }}
      - run: npm run lint

  docs:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: node
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: download cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-cache-${{ github.sha }}
      - run: npm run docs

  test:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: node
      options: --network-alias main

    services:
      redis:
        image: redis

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: download cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-cache-${{ github.sha }}
      - name: install puppeteer dependencies
        run: apt-get update && apt-get install -y libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb libgbm-dev
      - run: npm rebuild
      - run: ./node_modules/.bin/jest --ci
        env:
          REDIS_HOST: redis
          maxMemoryAlloted: 10000

  complete:
    runs-on: ubuntu-latest
    needs: [lint, docs, test]
    steps:
      - run: echo "Done!"
